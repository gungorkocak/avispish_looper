<!-- livebook:{"app_settings":{"show_source":true,"slug":"avispish-looper"}} -->

# 👽 AvispishLooper

```elixir
Mix.install([
  {:kino, "~> 0.13.0"},
  {:st7789_elixir, "~> 0.1.5"},
  {:evision, "~> 0.2.8"}
])
```

## 🤔 Plan

### TODOs

* [x] Make display work
* [x] Display image sequence
* [x] Get new image sequence from zip file
* [x] Add Loop, start, stop UI controls
* [x] Optimize fps as much as possible
* [x] Basic UI controls for start, stop etc
* [x] Optimize UI with form controls
* [ ] Deploy UI apps locally
* [x] Restart or start display multiple times

## 🏗️ Build

```elixir
import IEx.Helpers
import Kino.Shorts
```

## 📺 Run

```elixir
desc_load =
  Kino.Markdown.new("""
  ### 📲 How to load a new sequence?

  1. Make sure you have 240px width x 280px height for your video.
  2. Split your frames into jpg files. Frames need to be sorted. e.g. use incremental numbers, img001.jpg, img002.jpg etc.
  4. Zip all of them together. (do not zip the directory, but all the frame files)
  5. Choose **Load** tab and select your zip file. After selecting, wait a bit to see the filename, it takes a bit of a time, some times couple of tries.
  6. Press **Load**.
  7. After some seconds, you should see `load: :ok` in logs.
""")

desc_control = Kino.Markdown.new("""
  ### 🎛️ How to control the sequence?

  1. Select **Controls** tab.
  2. You should see buttons like "Start", "Restart", "Play" and "Pause".
  3. Start only works when the display is not started before.
  4. Try them. You sould see corresponding logs.
""")

desc = Kino.Layout.grid([desc_load, desc_control], columns: 2)

start_button = Kino.Control.button("🚀 Start")
restart_button = Kino.Control.button("🔄 Restart")
play_button = Kino.Control.button("▶️ Play")
pause_button = Kino.Control.button("⏸️ Pause")

cont_g1 = Kino.Layout.grid([start_button, restart_button], columns: 2, boxed: true, gap: 1)
cont_g2 = Kino.Layout.grid([play_button, pause_button], columns: 2, boxed: true, gap: 1)
player_controls = Kino.Layout.grid([cont_g1, cont_g2], columns: 2)

load_form = Kino.Control.form([seq_file: Kino.Input.file("Seq File", accept: [".zip"])], submit: "Load")

tabs =
  Kino.Layout.tabs([
    Load: load_form,
    Controls: player_controls
  ])

Kino.listen(load_form, fn %{type: :submit, data: %{seq_file: %{file_ref: zip_ref}}} ->
  seq_zip = Kino.Input.file_path(zip_ref)
  
  IO.puts("Load: #{inspect(AvispishLooper.load(seq_zip))}")
end)

Kino.listen(start_button, fn %{type: :click} -> IO.puts("start: #{inspect(AvispishLooper.start())}") end)
Kino.listen(restart_button, fn %{type: :click} -> IO.puts("stop: #{inspect(AvispishLooper.stop())}") end)
Kino.listen(play_button, fn %{type: :click} -> IO.puts("play: #{inspect(AvispishLooper.play())}") end)
Kino.listen(pause_button, fn %{type: :click} -> IO.puts("pause: #{inspect(AvispishLooper.pause())}") end)

Kino.Layout.grid([desc, tabs], columns: 1)

```

<!-- livebook:{"offset":2936,"stamp":{"token":"XCP.JgHZ1i6vrCOZwkWoKhjLwYOYQ_CMjqFUNYiOVfI8ClrmxfsLUh-Ll7Ruzca7KVTT0SAK3TJjJ8qaN_6uRJLOUSSHFe-8zoV47eSuOUJ3zoEWFsGqIgCTTIg","version":2}} -->
