<!-- livebook:{"app_settings":{"slug":"avispish-looper"}} -->

# 👽 AvispishLooper

```elixir
Mix.install([
  {:kino, "~> 0.13.0"},
  {:st7789_elixir, "~> 0.1.5"},
  {:evision, "~> 0.2.8"}
])
```

## 🤔 Plan

### TODOs

* [x] Make display work
* [x] Display image sequence
* [x] Get new image sequence from zip file
* [x] Add Loop, start, stop UI controls
* [x] Optimize fps as much as possible
* [x] Basic UI controls for start, stop etc
* [x] Optimize UI with form controls
* [ ] Deploy UI apps locally
* [x] Restart or start display multiple times

## 🏗️ Build

```elixir
import IEx.Helpers
import Kino.Shorts
```

## 📺 Run

```elixir
start_button = Kino.Control.button("🚀 Start")
restart_button = Kino.Control.button("🔄 Restart")
play_button = Kino.Control.button("▶️ Play")
pause_button = Kino.Control.button("⏸️ Pause")

player_controls = Kino.Layout.grid([start_button, restart_button, play_button, pause_button], columns: 4, boxed: true)

load_form = Kino.Control.form([seq_file: Kino.Input.file("Seq File", accept: [".zip"])], submit: "Load")

tabs =
  Kino.Layout.tabs([
    Load: load_form,
    Controls: player_controls
  ])

Kino.listen(load_form, fn %{type: :submit, data: %{seq_file: %{file_ref: zip_ref}}} ->
  seq_zip = Kino.Input.file_path(zip_ref)
  
  IO.puts("Load: #{inspect(AvispishLooper.load(seq_zip))}")
end)

Kino.listen(start_button, fn %{type: :click} -> IO.puts("start: #{inspect(AvispishLooper.start())}") end)
Kino.listen(restart_button, fn %{type: :click} -> IO.puts("stop: #{inspect(AvispishLooper.stop())}") end)
Kino.listen(play_button, fn %{type: :click} -> IO.puts("play: #{inspect(AvispishLooper.play())}") end)
Kino.listen(pause_button, fn %{type: :click} -> IO.puts("pause: #{inspect(AvispishLooper.pause())}") end)

tabs

```

<!-- livebook:{"offset":1794,"stamp":{"token":"XCP.S0CKamjH4uOoWuWBuefsch5Mlx_SfcOnIrCFTGj85S-bGlT2lhX8dVxRjqDUC3_vQT0sFa4hknv5J6YmBIfdgWksYiZyUnUXUpYuZk7d23aJVCBGzPB3r40","version":2}} -->
